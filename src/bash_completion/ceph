#
# Ceph - scalable distributed file system
#
# Copyright (C) 2011 Wido den Hollander <wido@widodh.nl>
# Copyright (C) 2015 Mirantis Inc. <akupczyk@mirantis.com>
#
# This is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1, as published by the Free Software
# Foundation.
#

_ceph()
{
#COMPREPLY=( \  "#comment to option" ); return 0
    local options_noarg="-h --help -s --status -w --watch --watch-debug --watch-info --watch-sec --watch-warn --watch-error --version -v --verbose --concise"
    local options_arg="-c --conf -i --in-file -o --out-file --id --user -n --name --cluster --admin-daemon --admin-socket -f --format --connect-timeout"
    local cnt=${#COMP_WORDS[@]}
    local cur=${COMP_WORDS[COMP_CWORD]}
    local prev=${COMP_WORDS[COMP_CWORD-1]}
    local help=/tmp/ceph-help.tmp

    if [[ " -c --conf -i --in-file -o --out-file " =~ " ${prev} " ]]
    then
	#default autocomplete for options (file autocomplete)
	compopt -o default;COMPREPLY=();return 0
    fi
    if [[ "${cur:0:1}" == "-" ]] ;
    then
	COMPREPLY=( $(compgen -W "${options_noarg} ${options_arg}" -- $cur) )
	return 0
    fi
    str=
    for (( i=1 ; i<cnt ; i++ ))
    do
	#skip this word if it is option
	if [[ " ${options_noarg} " =~ " ${COMP_WORDS[i]} " ]] ;	then continue; fi
	#skip this word and next if it is option with arg
	if [[ " ${options_arg} " =~ " ${COMP_WORDS[i]} " ]] ;   then ((i++)); continue;	fi
	#make add " " when concetenating words (used for searching)
	[[ "$str" != "" ]] && str=$str" "
	str=$str${COMP_WORDS[i]}
    done
    #if we do not have ceph-help.tmp, create it
    if [ ! -f $help ]
    then
	#we create completion words from ceph --help
	${COMP_WORDS[0]} --help 2>/dev/null |
	#filter out everything before "Monitor commands:"
	awk -e ' BEGIN { a=0 } ; /Monitor commands:/ || a>0 {a++} ; a>3 { print } ;' |
	#merge ceph help 2 columns into lines
	awk -e '
        BEGIN { a=""; b=""; }
        /^ / { #option starts
            t=substr($0,2,40); #left column
            gsub(/[ ]+$/,"",t);
            a=a t;
            r=substr($0,43); #right column
            gsub(/[ ]+$/,"",r);
            b=b r;};
        !/^ / { #option continues
            if(a!="") print  a " #" b;
            a=substr($0,0,40);
            gsub(/[ ]+$/,"",a);
            b=substr($0,42);
            gsub(/[ ]+$/,"",b);}
        END { print a " #" b}' >$help
    fi
    #if still no ceph-help.tmp, exit
    [ ! -f $help ] && return 0
    #if $str has improper characters, exit
    [[ $(echo -n $str | sed "s/[-@+a-zA-Z0-9_ ]//g" |wc -c) != 0 ]] && return 0
    lstr=${COMP_WORDS[COMP_CWORD]}

    #find matching sequences eg. "osd crush ru.."
    if [[ $(grep -c "^${str}" $help) != 1 ]]
    then
	#multiple substring matches, supply only short names
	COMPREPLY=( $(sed "/^${str}/ { s/^${str}/${lstr}/;s/ .*//;p; };d" $help |sort -u ) )
    else
	#only one match. in addition to only match, print string with help line
	local line=$(grep "^${str}" $help |sed "s/^${str}/${lstr}/")
	COMPREPLY=( "$line" $(echo $line | sed "s/ .*//" ) )
    fi
}
complete -F _ceph ceph
